//import fetch from 'node-fetch'
//const Syno = require('syno')
const Discord = require('discord.js')
const fs = require('fs')
const exiftool = require('node-exiftool')
const exiftoolBin = require('dist-exiftool')
const SynologyApi = require('./lib/SynoApi')
const base_directory = process.env.SYNO_BASE_DIRECTORY
const file_directory = process.env.SYNO_FILE_DIRECTORY
const nas_file_directory = process.env.SYNO_NAS_FILE_DIRECTORY
const exif = new exiftool.ExiftoolProcess(exiftoolBin)
require('dotenv').config()

let syno = new SynologyApi.SynoApi({
    protocol: process.env.SYNO_PROTOCOL,
    host: process.env.SYNO_HOSTNAME,
    port: process.env.SYNO_PORT,
    username: process.env.SYNO_USER,
    password: process.env.SYNO_PASSWORD
})

let files = []

function getMetadata(file_list) {
    exif
        .open()
        .then(async() => {
            for(const file of file_list) {
                console.log(file)
                console.log(file_directory + file)
                try {
                    let raw_metadata = await exif.readMetadata(file_directory + file, ['Title'])
                    console.log('PDF Title: ' + raw_metadata.data[0].Title)
                    files.push([raw_metadata.data[0].Title, raw_metadata.data[0].SourceFile])
                    console.log('File List: ' + files)
                } catch(error) {
                    console.error(error)
                }
            }
        })
        .then(() => exif.close())
        .catch(console.error)
}

module.exports = {
    name: 'training',
    description: "Get reading cadet!",
    execute(message, args) {
        console.log("Someone's trying to learn")
        console.log("Message: " + message.content)
        message.channel.send({ embeds: [this.list()] })
    },
    initialize() {
        console.log("Creating sharable file list...")
        files = []
        const raw_file_list = fs.readdirSync(file_directory).filter(file => file.endsWith('.pdf'))
        console.log(raw_file_list)
        getMetadata(raw_file_list)
        server_info = async() => {
            return await syno.dsm.getInfo()
        }

        server_info().then(console.log)
        
        /* const getServerInfo = async() => {
            const info = await server_info()
        } */
        
        //console.log(server_info)
        return files
    },
    list() {
        /* let print_list = ""
        print_list += "List of currently available files:\n"
        print_list += "+--------+-----------------------------------------+\n"
        print_list += "| Number | Name                                    |\n"
        print_list += "+========+=========================================+\n"
        for(const [i, file] of files.entries()) {
            print_list += "| " + i + "      | " + " " + file[0] + " |\n"
        }
        console.log(print_list)
        return print_list */
        /* const print_list = new Discord.MessageEmbed()
            .setColor('#ff0000')
            .setTitle('File List')
            .addFields(
                { name: 'Regular field title', value: 'Some value here' },
                { name: '\u200B', value: '\u200B' },
                { name: 'Inline field title', value: 'Some value here', inline: true },
                { name: 'Inline field title', value: 'Some value here', inline: true },
            )
            .addField('', 'Some value here', true)
            .setTimestamp()
        return print_list */
        let print_list = ""
        for(const [i, file] of files.entries()) {
            print_list += i + "     " + file[0] + "     " + server_info() + "\n"
            //createSharingLinks(nas_file_directory + file[1]) + "\n"
        }
        console.log(server_info)
        return print_list
    }
}